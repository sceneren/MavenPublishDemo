//maven-publish 新方式
//在需要打包的地方引入
//apply from: '../maven-publish.gradle'

apply plugin: "maven-publish"

def USERNAME = ""
def PASSWORD = ""
def RELEASE_REPOSITORY_URL = ''
def SNAPSHOT_REPOSITORY_URL = ''
def GROUP_ID = ''
def ARTIFACT_ID = ''
def VERSION_NAME = ''

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

publishing {
    publications {
        // 定义一个名为 Production 的发布
        Production(MavenPublication) {
            groupId = GROUP_ID
            artifactId = ARTIFACT_ID
            version = VERSION_NAME
            // 必须有这个 否则不会上传AAR包
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            // 上传source，这样使用方可以看到方法注释
            artifact generateSourcesJar

            //带上依赖 ，否则会报错
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dp.group)
                    dependencyNode.appendNode('artifactId', dp.name)
                    dependencyNode.appendNode('version', dp.version)

                    // for exclusions
                    if (dp.excludeRules.size() > 0) {
                        def exclusions = dependencyNode.appendNode('exclusions')
                        dp.excludeRules.each { ExcludeRule ex ->
                            def exclusion = exclusions.appendNode('exclusion')
                            exclusion.appendNode('groupId', ex.group)
                            exclusion.appendNode('artifactId', ex.module)
                        }
                    }
                }

            }
        }
    }
    repositories {
        // 定义一个 maven 仓库
        maven {
            // 可以有且仅有一个仓库不指定 name 属性，会隐式设置为 Maven
            // 根据 versionName 来判断仓库地址
            url = VERSION_NAME.endsWith('test') ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL
            allowInsecureProtocol = true
            // 仓库用户名密码
            credentials {
                username = USERNAME
                password = PASSWORD
            }
        }
    }
}

